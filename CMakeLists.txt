cmake_minimum_required(VERSION 3.27)

# Globals.
set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "Configurations" FORCE)

# Project.
project(framebuffet)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# External dependencies.
add_subdirectory(external)

# Framebuffet.
file(GLOB_RECURSE CPP_FILES CONFIGURE_DEPENDS src/*.cpp)
file(GLOB_RECURSE HPP_FILES CONFIGURE_DEPENDS src/*.hpp)
file(GLOB_RECURSE HLSL_FILES CONFIGURE_DEPENDS src/*.hlsl)
file(GLOB_RECURSE MANIFEST_FILES CONFIGURE_DEPENDS src/*.manifest)
add_executable(${PROJECT_NAME} ${CPP_FILES} ${MANIFEST_FILES})
target_sources(${PROJECT_NAME} PRIVATE ${HPP_FILES} ${HLSL_FILES})
target_compile_options(${PROJECT_NAME} PRIVATE /W4 /WX /MP /EHs-c- /GR- /ZI)
string(REGEX REPLACE "/EH[a-z]+" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
target_compile_definitions(
    ${PROJECT_NAME} PRIVATE
    _HAS_EXCEPTIONS=0
    WIN32_LEAN_AND_MEAN
    NOMINMAX
    _CRT_SECURE_NO_WARNINGS
)
target_include_directories(
    ${PROJECT_NAME} PRIVATE
    ${DEARIMGUI_INCLUDE_DIR}
    ${CGLTF_INCLUDE_DIR}
    ${STB_INCLUDE_DIR}
    ${WIL_INCLUDE_DIR}
    ${D3D12MEMALLOC_INCLUDE_DIR}
    ${DXAGILITYSDK_INCLUDE_DIR}
    ${DXCOMPILER_INCLUDE_DIR}
    ${DIRECTXTK12_INCLUDE_DIR}
    ${DIRECTXMESH_INCLUDE_DIR}
    ${DIRECTXTEX_INCLUDE_DIR}
    ${WINPIXEVENTRUNTIME_INCLUDE_DIR}
)
target_link_libraries(
    ${PROJECT_NAME} PRIVATE
    dearimgui
    d3d12.lib
    dxgi.lib
    dxguid.lib
    D3D12MemoryAllocator
    dxagilitysdk
    ${DXCOMPILER_LINK_DIR}/dxcompiler.lib
    $<$<CONFIG:Debug>:${DIRECTXTK12_DEBUG_LINK_DIR}/DirectXTK12.lib> $<$<CONFIG:Release>:${DIRECTXTK12_RELEASE_LINK_DIR}/DirectXTK12.lib>
    $<$<CONFIG:Debug>:${DIRECTXMESH_DEBUG_LINK_DIR}/DirectXMesh.lib> $<$<CONFIG:Release>:${DIRECTXMESH_RELEASE_LINK_DIR}/DirectXMesh.lib>
    $<$<CONFIG:Debug>:${DIRECTXTEX_DEBUG_LINK_DIR}/DirectXTex.lib> $<$<CONFIG:Release>:${DIRECTXTEX_RELEASE_LINK_DIR}/DirectXTex.lib>
    ${WINPIXEVENTRUNTIME_LINK_DIR}/WinPixEventRuntime.lib
)
target_link_options(${PROJECT_NAME} PRIVATE /entry:mainCRTStartup /SUBSYSTEM:WINDOWS)
set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ${PROJECT_NAME})
set_target_properties(${PROJECT_NAME} PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY $<TARGET_FILE_DIR:${PROJECT_NAME}>)
set_source_files_properties(${HLSL_FILES} PROPERTIES VS_TOOL_OVERRIDE None)

# Copy assets to target directory.
set(PROJECT_TARGET_DIRECTORY $<TARGET_FILE_DIR:${PROJECT_NAME}>)
add_custom_command(
    TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_TARGET_DIRECTORY}/shaders
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/src/shaders/cube.hlsl ${PROJECT_TARGET_DIRECTORY}/shaders/
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/src/shaders/gui.hlsl ${PROJECT_TARGET_DIRECTORY}/shaders/
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/src/shaders/cards.hlsl ${PROJECT_TARGET_DIRECTORY}/shaders/
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/src/shaders/rain.compute.hlsl ${PROJECT_TARGET_DIRECTORY}/shaders/
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/src/shaders/rain.draw.hlsl ${PROJECT_TARGET_DIRECTORY}/shaders/
    COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_TARGET_DIRECTORY}/models
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/src/models/CREDITS.md ${PROJECT_TARGET_DIRECTORY}/models/
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/src/models/stylized_crate.glb ${PROJECT_TARGET_DIRECTORY}/models/
    COMMAND ${CMAKE_COMMAND} -E copy ${DXAGILITYSDK_SOURCE_DIR}/bin/x64/D3D12Core.dll ${PROJECT_TARGET_DIRECTORY}
    COMMAND ${CMAKE_COMMAND} -E copy ${DXAGILITYSDK_SOURCE_DIR}/bin/x64/D3D12Core.pdb ${PROJECT_TARGET_DIRECTORY}
    COMMAND ${CMAKE_COMMAND} -E copy ${DXAGILITYSDK_SOURCE_DIR}/bin/x64/d3d12SDKLayers.dll ${PROJECT_TARGET_DIRECTORY}
    COMMAND ${CMAKE_COMMAND} -E copy ${DXAGILITYSDK_SOURCE_DIR}/bin/x64/d3d12SDKLayers.pdb ${PROJECT_TARGET_DIRECTORY}
    COMMAND ${CMAKE_COMMAND} -E copy ${DXCOMPILER_SOURCE_DIR}/bin/x64/dxcompiler.dll ${PROJECT_TARGET_DIRECTORY}
    COMMAND ${CMAKE_COMMAND} -E copy ${DXCOMPILER_SOURCE_DIR}/bin/x64/dxcompiler.pdb ${PROJECT_TARGET_DIRECTORY}
    COMMAND ${CMAKE_COMMAND} -E copy ${DXCOMPILER_SOURCE_DIR}/bin/x64/dxil.dll ${PROJECT_TARGET_DIRECTORY}
    COMMAND ${CMAKE_COMMAND} -E copy ${DXCOMPILER_SOURCE_DIR}/bin/x64/dxil.pdb ${PROJECT_TARGET_DIRECTORY}
    COMMAND ${CMAKE_COMMAND} -E copy ${WINPIXEVENTRUNTIME_BIN_DIR}/WinPixEventRuntime.dll ${PROJECT_TARGET_DIRECTORY}
)
